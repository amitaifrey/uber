syntax = "proto3";

option java_multiple_files = true;
option java_package = "generated";
option java_outer_classname = "UberProto";
option objc_class_prefix = "UBR";
import "google/protobuf/empty.proto";

package uber;

service UberService {
  // shard ops
  rpc AddRideOffer(RideOffer) returns (google.protobuf.Empty) {}
  rpc LockRide(RideOffer) returns (Result) {}
  rpc CommitRide(CommitRequest) returns (Result) {}

  // cluster ops
  rpc AddRemoteRide(RideOffer) returns (RideOffer) {}
  rpc RequestRide(RidePlanRequest) returns (PlanRideOffers) {}
  rpc GetCitySnapshot(City) returns (CitySnapshot) {}
  rpc RequestState(StateRequest) returns (google.protobuf.Empty) {}
  rpc SetState(State) returns (google.protobuf.Empty) {}
}

// A: []

message Result {
  bool result = 1;
}

message State {
  City city = 1;
  bytes data = 2;
}

message StateRequest {
  City city = 1;
  string ip = 2;
}

message Person {
  string first_name = 1;
  string last_name = 2;
  string phone_number = 3;
}

message Ride {
  string starting_position = 1;
  string ending_position = 2;
  string departure_date = 3;
}

message RideOfferInfo {
  int32 vacancies = 1;
  int32 permitted_deviation = 2;
}

message RideOffer {
  Person person = 1;
  Ride ride = 2;
  RideOfferInfo info = 3;
  string uuid = 4;
}

message RideRequest {
  Person person = 1;
  string departure_date = 2;
  repeated string cities = 3;
}

message RidePlanRequest {
  RideRequest request = 1;
  string city = 2;
}

message RideOffers {
  repeated RideOffer offers = 1;
}

message PlanRideOffers {
  repeated RideOffers ride_offers = 1;
}

message CommitRequest {
  RideOffer offer = 1;
  CommitInfo info = 2;
}

message CommitInfo {
  Person person = 1;
  string id = 2;
  string starting_position = 3;
  string ending_position = 4;
}

message RideOfferSnapshot {
  RideOffer offer = 1;
  repeated CommitInfo infos = 2;
}

message CitySnapshot {
  string name = 1;
  repeated RideOfferSnapshot rides = 2;
}

message Snapshot {
  repeated CitySnapshot snapshots = 1;
}

// Conf structs

message Configuration {
  repeated City all_cities = 1;
  repeated string my_cities = 2;
}

message City {
  string name = 1;
  int32 x = 2;
  int32 y = 3;
}
