plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'

    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'


    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
    mavenLocal()
}

def grpcVersion = '1.34.1' // CURRENT_GRPC_VERSION
def protobufVersion = '3.14.0'
def protocVersion = protobufVersion

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation("javax.annotation:javax.annotation-api:1.3.2")

    compile 'org.apache.zookeeper:zookeeper:3.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation("javax.annotation:javax.annotation-api:1.3.2")
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    // examples/advanced need this for JsonFormat
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

configurations.all {
    exclude module: 'slf4j-log4j12'
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDir 'lib/src/generated'
        }
    }
}

apply plugin: 'application'
mainClassName = 'host.main'
